
package Anallizadores;

import java_cup.runtime.*;

import ejemplo1.*;
import Listas.*;

parser code
{:

    public String cadena=" ";
     
    public void enviarLista(String dato){
        String[] arrayDato = dato.split(";");

        for(int i = 0; i< arrayDato.length; i++){
        erroresList list = new erroresList(arrayDato[i]);
        Open.lista2.add(list);
        }

    	
    }

    /**Metodo al que se llama automáticamente ante algún error sintactico.*/
    public void syntax_error(Symbol s){
        System.err.println("Error en la Línea " + (s.right+1) +" Columna "+(s.left+1)+ ". Identificador "
        +s.value + " no reconocido." );
erroresList error =new erroresList("ERROR SINTACTICO: ",". Identificador "
        +s.value + " no reconocido.","FILA:  "+(s.right+1),"COLUMNA:  "+(s.left+1),"SE ESPERABA OTRA PALABRA");
        Open.lista.add(error);
        
    }

    /**Metodo al que se llama en el momento en que ya no es posible una recuperación de
    errores.*/
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.err.println("Error en la Línea " + (s.right+1)+ "Columna "+(s.left+1)+". Identificador " +
        s.value + " no reconocido.");

erroresList error =new erroresList("ERROR SINTACTICO: ",". Identificador "
        +s.value + " no reconocido.","FILA:  "+(s.right+1),"COLUMNA:  "+(s.left+1),"SE ESPERABA OTRA PALABRA");
        Open.lista.add(error);
        
    
    }

    /*public Nodo getRaiz(){
        return action_obj.raiz;
    }*/
:}


action code {:
    //Nodo raiz=null;
    
:}

/*terminales reservados*/
terminal String encabezado,escuela,curso,docente,seccion,semestre,año,cuerpo,estudiante,ponderacion,valor,reportes,ra,rr,rp,re,verdadero,falso,ct,cv,cc,na,nr,logo,bordes,estilo,abre,igual,dosPuntos,coma,valorNumerico,porcentaje,cadena,id,cierra,bar;

/*
* Este terminal tiene un valor string. Recuerda que le dábamos el valor
* en el código del analizador léxico, al darle como parámetro un valor
* string al objeto Symbolo.
*/


/*
* Aquí están los no terminales
*/
non terminal INICIO, TITULOS, TITULO, ETIQUETAS,ETIQUETA,ENCAS,ENCA,CUERS,CUER,PONDS,POND,REPORS,REPOR,ESTI,ESTIS,TIPOCADENA,TIPODATO,ESTUS,ESTU,IDE,IDES,DRE,BOL,SENCA, SCUERPO,SSENCA,SSCUERPO,EN,COLE,CU,COLC,TIPOES;


/* ­­­­­­­­­­­­­­ Declaración de la gramática  ­­­­­­­­­­­ */
start with INICIO; // start with sirve para indicarle al parser con que produccion empezar

INICIO::=  TITULOS:tlos {:
cadena=tlos.toString();
enviarLista(cadena);

System.out.println(cadena);:} ;

TITULOS::= TITULOS:tlos TITULO:tlo {:RESULT = tlos.toString()+tlo.toString();:} 
           |TITULO:tlo {:RESULT = tlo.toString();:} 
;

TITULO::= abre ETIQUETAS:etqs cierra
{:RESULT = etqs.toString();:} ;

ETIQUETAS::= ETIQUETAS:etqs ETIQUETA:etq{:RESULT = etqs.toString()+etq.toString()+";";:}  
            |ETIQUETA:etq{:RESULT = etq.toString()+";";:} ;

ETIQUETA::= encabezado:encabe ENCAS:ec bar {:RESULT =encabe.toString()+","+ ec.toString();:}  
	|cuerpo:cuerp cierra CUERS:crs abre bar cuerpo {:RESULT = cuerp.toString()+","+crs.toString();:}  
	|ponderacion:pondera cierra PONDS:pds abre bar ponderacion {:RESULT = pondera.toString()+","+pds.toString();:}  
	|reportes:report cierra REPORS:reps abre bar reportes {:RESULT = report.toString()+","+reps.toString();:}  
	|estilo:estil cierra ESTIS:ests abre bar estilo{:RESULT = estil.toString()+","+ests.toString();:};
		
ENCAS::= ENCAS:ecn ENCA:o {:
RESULT = ecn.toString()+o+"¡"; :}
	|ENCA:o

	{:
RESULT = o.toString()+"¡"; :};
		
	

CUERS::= CUERS:crs CUER:cr {: RESULT = crs.toString()+cr.toString()+"¡";:}  
		|CUER:cr {: RESULT = cr.toString()+"¡";:}  
 ;
		
PONDS::= PONDS:pds POND:pd {:RESULT = pds.toString()+ pd.toString()+"¡";:}
		|POND:pd {:RESULT = pd.toString()+"¡";:};

REPORS::= REPORS:reps REPOR:rep{: RESULT= reps.toString()+rep.toString()+"¡";:}
		|REPOR:rep{: RESULT= rep.toString()+"¡";:};
		
ESTIS::= ESTIS:ests ESTI:est{: RESULT=ests.toString()+est.toString();:}
		|ESTI:est{: RESULT=est.toString();:};
		
ENCA::= id:pos dosPuntos TIPODATO:a igual TIPOCADENA:b
    {: 

RESULT= pos.toString()+","+a.toString()+","+b.toString();
:};



TIPODATO::= escuela:a{:RESULT = a;:}
			|curso:a {:RESULT = a;:}
			|docente:a {:RESULT = a;:}
			|seccion:a {:RESULT = a;:}
			|semestre:a {:RESULT = a;:}
			|año:a {:RESULT = a;:};

TIPOCADENA::= cadena:b {:RESULT = b;:}
			|valorNumerico:b {:RESULT = b;:};
			
CUER::= abre estudiante ESTUS:ests bar cierra 
{: RESULT = ests.toString();:};

ESTUS::= ESTUS:ests coma ESTU:est {: RESULT = ests.toString()+est.toString()+ "!";:}
        |ESTU:est {: RESULT = est.toString()+ "!";:};

ESTU::= id:dat1 igual TIPOCADENA:b
{: RESULT = dat1.toString()+ "," +b.toString();:}
;

POND::= abre IDES:ids bar cierra
{:RESULT = ids.toString();:};

IDES::= IDES:ids IDE:id {:RESULT =ids.toString()+ ","+ id.toString()+",";:}
		|IDE:id {:RESULT = id.toString()+",";:};
		
IDE::=id:dat valor:val igual porcentaje:por
{: RESULT= dat.toString()+","+val.toString()+","+por.toString();:};
		
REPOR::= DRE:repor igual BOL:jacky
{: RESULT= repor.toString() +","+ jacky.toString();:};

DRE::= ra:repor {:RESULT = repor;:}
		|rr:repor {:RESULT = repor;:}
		|re:repor {:RESULT = repor;:}
		|rp:repor {:RESULT = repor;:};
		
BOL::= verdadero:jacky {:RESULT = jacky;:}
		|falso:jacky {:RESULT = jacky;:};

ESTI::= SENCA:no SCUERPO:scu{: RESULT=no.toString()+scu.toString();:};

SENCA::= abre encabezado SSENCA:ee bar cierra
{: RESULT= ee.toString()+"¡";:};

SCUERPO::= abre cuerpo SSCUERPO:sscu bar cierra
{: RESULT=sscu.toString()+"¡";:};

SSENCA::= SSENCA:ee coma EN:e{: RESULT = ee.toString()+e.toString()+"!";:}
		|EN:e{: RESULT= e+"!";:};
	
EN::= COLE:tt igual cadena:cad
{: RESULT = tt.toString() +","+ cad.toString();:};

COLE::= ct:tt {:RESULT = tt;:}
		|cv:tt {:RESULT = tt;:}
		|logo:tt {:RESULT = tt;:};
		
SSCUERPO::= SSCUERPO:sscu coma CU:cu{: RESULT= sscu.toString()+cu.toString()+"!";:} 
		|CU:cu{: RESULT= cu+"!";:};
		
CU::= COLC:yy igual TIPOES:xx
{: RESULT = yy.toString() +","+ xx.toString();:};

TIPOES::= cadena:xx {:RESULT = xx;:}
		|verdadero:xx {:RESULT = xx;:}
		|falso:xx {:RESULT = xx;:};

COLC::= cc:yy {:RESULT = yy;:}
		|na:yy {:RESULT = yy;:}
		|nr:yy {:RESULT = yy;:}
		|bordes:yy {:RESULT = yy;:};

