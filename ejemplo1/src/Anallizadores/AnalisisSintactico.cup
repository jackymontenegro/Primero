
package Anallizadores;

import java_cup.runtime.*;

import ejemplo1.*;
import Listas.*;

parser code
{:

    
    /**Metodo al que se llama automáticamente ante algún error sintactico.*/
    public void syntax_error(Symbol s){
        System.err.println("Error en la Línea " + (s.right+1) +" Columna "+(s.left+1)+ ". Identificador "
        +s.value + " no reconocido." );
erroresList error =new erroresList("ERROR SINTACTICO: ",". Identificador "
        +s.value + " no reconocido.","FILA:  "+(s.right+1),"COLUMNA:  "+(s.left+1),"SE ESPERABA OTRA PALABRA");
        Open.lista.add(error);
        
    }

    /**Metodo al que se llama en el momento en que ya no es posible una recuperación de
    errores.*/
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.err.println("Error en la Línea " + (s.right+1)+ "Columna "+(s.left+1)+". Identificador " +
        s.value + " no reconocido.");

erroresList error =new erroresList("ERROR SINTACTICO: ",". Identificador "
        +s.value + " no reconocido.","FILA:  "+(s.right+1),"COLUMNA:  "+(s.left+1),"SE ESPERABA OTRA PALABRA");
        Open.lista.add(error);
        
    
    }

    /*public Nodo getRaiz(){
        return action_obj.raiz;
    }*/
:}


action code {:
    //Nodo raiz=null;
    
:}

/*terminales reservados*/
terminal String encabezado,escuela,curso,docente,seccion,semestre,año,cuerpo,estudiante,ponderacion,valor,reportes,ra,rr,rp,re,verdadero,falso,ct,cv,cc,na,nr,logo,bordes,estilo,abre,igual,dosPuntos,coma,valorNumerico,porcentaje,cadena,id,cierra,bar;

/*
* Este terminal tiene un valor string. Recuerda que le dábamos el valor
* en el código del analizador léxico, al darle como parámetro un valor
* string al objeto Symbolo.
*/


/*
* Aquí están los no terminales
*/
non terminal INICIO, TITULOS, TITULO, ETIQUETAS,ETIQUETA,ENCAS,ENCA,CUERS,CUER,PONDS,POND,REPORS,REPOR,ESTI,ESTIS,TIPOCADENA,TIPODATO,ESTUS,ESTU,IDE,IDES,DRE,BOL,SENCA, SCUERPO,SSENCA,SSCUERPO,EN,COLE,CU,COLC,TIPOES;


/* ­­­­­­­­­­­­­­ Declaración de la gramática  ­­­­­­­­­­­ */
start with INICIO; // start with sirve para indicarle al parser con que produccion empezar


INICIO::=  TITULOS  ;

TITULOS::= TITULOS TITULO
           |TITULO;

TITULO::= abre ETIQUETAS cierra;

ETIQUETAS::= ETIQUETAS ETIQUETA
            |ETIQUETA;

ETIQUETA::= encabezado ENCAS bar  
	|cuerpo cierra CUERS abre bar cuerpo 
	|ponderacion cierra PONDS abre bar ponderacion 
	|reportes cierra REPORS abre bar reportes 
	|estilo cierra ESTIS abre bar estilo;
		
ENCAS::= ENCAS ENCA
	|ENCA;

CUERS::= CUERS CUER  
		|CUER ;
		
PONDS::= PONDS POND
		|POND;

REPORS::= REPORS REPOR
		|REPOR;
		
ESTIS::= ESTIS ESTI
		|ESTI;
		
ENCA::= id dosPuntos TIPODATO igual TIPOCADENA;

TIPODATO::= escuela
			|curso
			|docente
			|seccion
			|semestre
			|año;

TIPOCADENA::= cadena
			|valorNumerico;
			
CUER::= abre estudiante ESTUS bar cierra;

ESTUS::= ESTUS coma ESTU
        |ESTU; 

ESTU::= id igual TIPOCADENA;

POND::= abre IDES bar cierra;

IDES::= IDES IDE
		|IDE;
		
IDE::=id valor igual porcentaje;
		
REPOR::= DRE igual BOL;

DRE::= ra
		|rr
		|re
		|rp;
		
BOL::= verdadero
		|falso;

ESTI::= SENCA SCUERPO;

SENCA::= abre encabezado SSENCA bar cierra;

SCUERPO::= abre cuerpo SSCUERPO bar cierra;

SSENCA::= SSENCA coma EN 
		|EN;
	
EN::= COLE igual cadena;

COLE::= ct
		|cv
		|logo;
		
SSCUERPO::= SSCUERPO coma CU 
		|CU;
		
CU::= COLC igual TIPOES;

TIPOES::= cadena
		|verdadero
		|falso;

COLC::= cc
		|na
		|nr
		|bordes;
